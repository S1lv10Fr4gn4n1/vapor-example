name: Swift

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  releases:
    runs-on: ubuntu-latest
    steps: 
    - name: Check ENV
      run: |
        echo "GITHUB_RUN_NUMBER $GITHUB_RUN_NUMBER"
        echo "JOB_NUMBER=$GITHUB_RUN_NUMBER" >> $GITHUB_ENV        
        
    - name: "Create GitHub Release"
      id: create_release
      uses: actions/github-script@v5
      with:
        script: |
          const tag_name = `${{ env.JOB_NUMBER }}v`
          console.log(`Creating version ${tag_name}`) 
          github.rest.repos.createRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
            tag_name: tag_name
          });    

#   build_macosx:
#     needs: releases
#     runs-on: macos-latest    
#     steps: 
#     - uses: fwal/setup-swift@v1 # 5.4.3
    
#     - name: "Get latest GitHub Release"
#       id: get_release
#       uses: actions/github-script@v5
#       with:
#         script: |
#           github.rest.repos.getLatestRelease({
#             owner: context.repo.owner,
#             repo: context.repo.repo,
#           });
         
#     - uses: actions/checkout@v2
    
#     - name: Build for Macos
#       run: |
#         cd HelloVapor
#         swift build

  
  build_linux:
    needs: releases
    runs-on: ubuntu-latest
    #container: swiftlang/swift:nightly-5.5-bionic
    steps:
    - name: "Get latest GitHub Release"
      id: get_release
      uses: actions/github-script@v5
      with:
        script: |
          const result = await github.rest.repos.getLatestRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
          })
          console.log(result.data)
          return result.data
        result-encoding: json
        
    - name: Something else 1
      run: |
        echo "${{steps.get_release.outputs.upload_url}}"

    - uses: actions/checkout@v2

    - name: Build for Linux
      run: |
        cd HelloVapor
        # swift build
        swift --version
        
    - name: Something else
      run: |
        echo "${{steps.get_release.outputs.upload_url}}"
        ls HelloVapor/.build/
        
    
        
#     - name: Upload release assets for Linux
#       uses: actions/upload-release-asset@v1.0.1
#       with:
#         upload_url: ${{ steps.get_release.outputs.upload_url }}
#         asset_path: HelloVapor/.build/debug/Run
#         asset_name: HelloVapor-Linux
