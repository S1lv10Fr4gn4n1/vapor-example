name: Swift

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  releases:
    runs-on: ubuntu-latest
    steps: 
    - name: "Create GitHub Release"
      id: create_release
      uses: actions/github-script@v5
      with:
        script: |
          github.rest.repos.createRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
            tag_name: 'v1'
          });    


  build_macosx:
    runs-on: macos-latest
#     runs-on: ${{ matrix.os }}
#     strategy:
#        matrix:
#           os: [ubuntu-latest, macos-latest]
#           swift: ["5.3"]
    
    steps: 
    - name: "Get latest GitHub Release"
      id: get_release
      uses: actions/github-script@v5
      with:
        script: |
          github.rest.repos.getLatestRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
          });
         
    - uses: actions/checkout@v2
    
    - name: Build for Macos
      run: |
        cd HelloVapor
        swift build
      
#     - name: Upload release assets for Macos
#       uses: actions/upload-release-asset@v1.0.1
#       with:
#         upload_url: ${{ steps.get_release.outputs.upload_url }}
#         asset_path: target/release/dmenv
#         asset_name: dmenv-linux

#     - name: Build for Macosx
#       if: matrix.os == 'macos-latest'
#       run: |
#         cd HelloVapor
#         swift build
    
#     - name: Upload release assets for macos
#       if: matrix.os == 'macos-latest'
#       uses: actions/upload-release-asset@v1.0.1
#       with:
#         upload_url: ${{ steps.create_release.outputs.upload_url }}
#         asset_path: target/release/dmenv
#         asset_name: dmenv-linux

  
  
  build_linux:
    runs-on: ubuntu-latest
    container: swiftlang/swift:nightly-5.5-bionic
    steps:
    - name: "Get latest GitHub Release"
      id: get_release
      uses: actions/github-script@v5
      with:
        script: |
          github.rest.repos.getLatestRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
          });

    - uses: actions/checkout@v2

    - name: Build for Linux
      run: |
        cd HelloVapor
        swift build
